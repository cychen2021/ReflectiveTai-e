Points-to sets of all variables
[]:<LazyHeapField: java.lang.Class class$(java.lang.String)>/name -> [[]:ConstantObj{java.lang.String: "A"}]
[]:<LazyHeapField: java.lang.Class class$(java.lang.String)>/temp$0 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
[]:<LazyHeapField: java.lang.Class class$(java.lang.String)>/temp$1 -> [[]:MergedObj{<Merged java.lang.NoClassDefFoundError>}]
[]:<LazyHeapField: java.lang.String unknown(java.lang.String)>/s -> [[]:ConstantObj{java.lang.String: "A"}]
[]:<LazyHeapField: java.lang.String unknown(java.lang.String)>/temp$0 -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "A"}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/%stringconst1 -> [[]:ConstantObj{java.lang.String: "Field1"}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/%stringconst2 -> [[]:ConstantObj{java.lang.String: "Field2"}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/%stringconst3 -> [[]:ConstantObj{java.lang.String: "Hello"}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/c1 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=null},type=java.lang.Class}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/c2 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=null},type=java.lang.Class}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/field1 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=SignatureRecord[fieldName=Field1, fieldType=null]},type=java.lang.reflect.Field}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/field2 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=SignatureRecord[fieldName=Field2, fieldType=null]},type=java.lang.reflect.Field}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/name1 -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/name2 -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/obj1 -> [[]:LazyObj{alloc=TYPE_KNOWN,type=A}, []:LazyObj{alloc=TYPE_UNKNOWN,type=java.lang.Object}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/obj2 -> [[]:LazyObj{alloc=TYPE_KNOWN,type=A}, []:LazyObj{alloc=TYPE_UNKNOWN,type=java.lang.Object}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/str1 -> []
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/temp$0 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=null},type=java.lang.Class}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/temp$1 -> [[]:LazyObj{alloc=TYPE_UNKNOWN,type=java.lang.Object}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/temp$10 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/temp$11 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/temp$12 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/temp$13 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=SignatureRecord[fieldName=Field2, fieldType=null]},type=java.lang.reflect.Field}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/temp$2 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/temp$3 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/temp$4 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/temp$5 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=SignatureRecord[fieldName=Field1, fieldType=null]},type=java.lang.reflect.Field}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/temp$6 -> []
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/temp$7 -> []
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/temp$8 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=null},type=java.lang.Class}]
[]:<LazyHeapField: void invoke(java.lang.String,java.lang.String)>/temp$9 -> [[]:LazyObj{alloc=TYPE_UNKNOWN,type=java.lang.Object}]
[]:<LazyHeapField: void main(java.lang.String[])>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "A"}]
[]:<LazyHeapField: void main(java.lang.String[])>/args -> [[]:EntryPointObj{alloc=<main-arguments>,type=java.lang.String[] in <LazyHeapField: void main(java.lang.String[])>}]
[]:<LazyHeapField: void main(java.lang.String[])>/temp$0 -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<LazyHeapField: void main(java.lang.String[])>/temp$1 -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>/$r1 -> []
[]:<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>/%this -> [[]:EntryPointObj{alloc=<main-thread>,type=java.lang.Thread}]
[]:<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>/r2 -> [[]:EntryPointObj{alloc=<main-thread-group>,type=java.lang.ThreadGroup}]
[]:<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>/r3 -> [[]:ConstantObj{java.lang.String: "main"}]
[]:<java.lang.ThreadGroup: void <init>()>/%stringconst1 -> []
[]:<java.lang.ThreadGroup: void <init>()>/%this -> [[]:EntryPointObj{alloc=<system-thread-group>,type=java.lang.ThreadGroup}]
[]:<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>/%this -> [[]:EntryPointObj{alloc=<main-thread-group>,type=java.lang.ThreadGroup}]
[]:<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>/r1 -> [[]:EntryPointObj{alloc=<system-thread-group>,type=java.lang.ThreadGroup}]
[]:<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>/r3 -> [[]:ConstantObj{java.lang.String: "main"}]

Points-to sets of all static fields
<LazyHeapField: java.lang.Class class$A> -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
<java.lang.System: java.io.PrintStream out> -> []

Points-to sets of all instance fields
[]:EntryPointObj{alloc=<main-thread>,type=java.lang.Thread}.blockerLock -> []
[]:EntryPointObj{alloc=<system-thread-group>,type=java.lang.ThreadGroup}.name -> []

Points-to sets of all array indexes
[]:EntryPointObj{alloc=<main-arguments>,type=java.lang.String[] in <LazyHeapField: void main(java.lang.String[])>}[*] -> [[]:EntryPointObj{alloc=<main-arguments-element>,type=java.lang.String in <LazyHeapField: void main(java.lang.String[])>}]

