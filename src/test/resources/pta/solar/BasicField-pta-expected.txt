Points-to sets of all variables
[]:<A: void <clinit>()>/temp$0 -> [[]:ConstantObj{java.lang.String: "Field2"}]
[]:<A: void <init>()>/%this -> [[]:NewObj{<BasicField: void forName()>[6@L12] new A}]
[]:<A: void <init>()>/temp$0 -> [[]:ConstantObj{java.lang.String: "Field1"}]
[]:<B: void <init>()>/%this -> [[]:NewObj{<BasicField: void forName()>[28@L22] new B}]
[]:<BasicField: void forName()>/%nullconst -> []
[]:<BasicField: void forName()>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "A"}]
[]:<BasicField: void forName()>/%stringconst1 -> [[]:ConstantObj{java.lang.String: "field1"}]
[]:<BasicField: void forName()>/%stringconst2 -> [[]:ConstantObj{java.lang.String: "field2"}]
[]:<BasicField: void forName()>/%stringconst3 -> [[]:ConstantObj{java.lang.String: "B"}]
[]:<BasicField: void forName()>/%stringconst4 -> [[]:ConstantObj{java.lang.String: "field3"}]
[]:<BasicField: void forName()>/%stringconst5 -> [[]:ConstantObj{java.lang.String: "Field3"}]
[]:<BasicField: void forName()>/%stringconst6 -> [[]:ConstantObj{java.lang.String: "field4"}]
[]:<BasicField: void forName()>/%stringconst7 -> [[]:ConstantObj{java.lang.String: "Field4"}]
[]:<BasicField: void forName()>/a -> [[]:NewObj{<BasicField: void forName()>[6@L12] new A}]
[]:<BasicField: void forName()>/aClass -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
[]:<BasicField: void forName()>/b -> [[]:NewObj{<BasicField: void forName()>[28@L22] new B}]
[]:<BasicField: void forName()>/bClass -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=B},type=java.lang.Class}]
[]:<BasicField: void forName()>/field1 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=SignatureRecord[fieldName=field1, fieldType=null]},type=java.lang.reflect.Field}]
[]:<BasicField: void forName()>/field2 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=SignatureRecord[fieldName=field2, fieldType=null]},type=java.lang.reflect.Field}]
[]:<BasicField: void forName()>/field3 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=B, signature=SignatureRecord[fieldName=field3, fieldType=null]},type=java.lang.reflect.Field}]
[]:<BasicField: void forName()>/field4 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=B, signature=SignatureRecord[fieldName=field4, fieldType=null]},type=java.lang.reflect.Field}]
[]:<BasicField: void forName()>/temp$0 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
[]:<BasicField: void forName()>/temp$1 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=SignatureRecord[fieldName=field1, fieldType=null]},type=java.lang.reflect.Field}]
[]:<BasicField: void forName()>/temp$10 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=B},type=java.lang.Class}]
[]:<BasicField: void forName()>/temp$11 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=B, signature=SignatureRecord[fieldName=field3, fieldType=null]},type=java.lang.reflect.Field}]
[]:<BasicField: void forName()>/temp$12 -> [[]:NewObj{<BasicField: void forName()>[28@L22] new B}]
[]:<BasicField: void forName()>/temp$13 -> []
[]:<BasicField: void forName()>/temp$14 -> []
[]:<BasicField: void forName()>/temp$15 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=B, signature=SignatureRecord[fieldName=field4, fieldType=null]},type=java.lang.reflect.Field}]
[]:<BasicField: void forName()>/temp$16 -> []
[]:<BasicField: void forName()>/temp$17 -> [[]:ConstantObj{java.lang.String: "Field4"}]
[]:<BasicField: void forName()>/temp$2 -> [[]:NewObj{<BasicField: void forName()>[6@L12] new A}]
[]:<BasicField: void forName()>/temp$3 -> []
[]:<BasicField: void forName()>/temp$4 -> []
[]:<BasicField: void forName()>/temp$5 -> []
[]:<BasicField: void forName()>/temp$6 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=SignatureRecord[fieldName=field2, fieldType=null]},type=java.lang.reflect.Field}]
[]:<BasicField: void forName()>/temp$7 -> [[]:ConstantObj{java.lang.String: "Field2"}]
[]:<BasicField: void forName()>/temp$8 -> []
[]:<BasicField: void forName()>/temp$9 -> [[]:ConstantObj{java.lang.String: "Field2"}]
[]:<BasicField: void forName()>/test1 -> []
[]:<BasicField: void forName()>/test2 -> [[]:ConstantObj{java.lang.String: "Field2"}]
[]:<BasicField: void main(java.lang.String[])>/args -> [[]:EntryPointObj{alloc=<main-arguments>,type=java.lang.String[] in <BasicField: void main(java.lang.String[])>}]

Points-to sets of all static fields
<A: java.lang.String field2> -> [[]:ConstantObj{java.lang.String: "Field2"}]
<B: java.lang.String field4> -> [[]:ConstantObj{java.lang.String: "Field4"}]
<java.lang.System: java.io.PrintStream out> -> []

Points-to sets of all instance fields
[]:NewObj{<BasicField: void forName()>[28@L22] new B}.field3 -> []
[]:NewObj{<BasicField: void forName()>[6@L12] new A}.field1 -> [[]:ConstantObj{java.lang.String: "Field1"}]

Points-to sets of all array indexes
[]:EntryPointObj{alloc=<main-arguments>,type=java.lang.String[] in <BasicField: void main(java.lang.String[])>}[*] -> [[]:EntryPointObj{alloc=<main-arguments-element>,type=java.lang.String in <BasicField: void main(java.lang.String[])>}]

