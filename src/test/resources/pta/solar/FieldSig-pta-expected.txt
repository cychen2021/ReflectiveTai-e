Points-to sets of all variables
[]:<A: void <init>()>/%this -> [[]:NewObj{<FieldSig: void invoke(java.lang.String)>[0@L9] new A}]
[]:<A: void <init>()>/temp$0 -> [[]:NewObj{<A: void <init>()>[1@L24] new Y}]
[]:<FieldSig: java.lang.Class class$(java.lang.String)>/name -> [[]:ConstantObj{java.lang.String: "A"}]
[]:<FieldSig: java.lang.Class class$(java.lang.String)>/temp$0 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
[]:<FieldSig: java.lang.Class class$(java.lang.String)>/temp$1 -> [[]:MergedObj{<Merged java.lang.NoClassDefFoundError>}]
[]:<FieldSig: java.lang.String unknown(java.lang.String)>/s -> [[]:ConstantObj{java.lang.String: "field1"}]
[]:<FieldSig: java.lang.String unknown(java.lang.String)>/temp$0 -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<FieldSig: void invoke(java.lang.String)>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "A"}]
[]:<FieldSig: void invoke(java.lang.String)>/a -> [[]:NewObj{<FieldSig: void invoke(java.lang.String)>[0@L9] new A}]
[]:<FieldSig: void invoke(java.lang.String)>/c -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
[]:<FieldSig: void invoke(java.lang.String)>/field11 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=SignatureRecord[fieldName=null, fieldType=X]},type=java.lang.reflect.Field}, []:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=SignatureRecord[fieldName=null, fieldType=Y]},type=java.lang.reflect.Field}, []:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=SignatureRecord[fieldName=null, fieldType=Z]},type=java.lang.reflect.Field}, []:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=SignatureRecord[fieldName=null, fieldType=java.lang.Object]},type=java.lang.reflect.Field}, []:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=null},type=java.lang.reflect.Field}]
[]:<FieldSig: void invoke(java.lang.String)>/field12 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=SignatureRecord[fieldName=null, fieldType=X]},type=java.lang.reflect.Field}, []:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=SignatureRecord[fieldName=null, fieldType=Y]},type=java.lang.reflect.Field}, []:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=SignatureRecord[fieldName=null, fieldType=java.lang.Object]},type=java.lang.reflect.Field}, []:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=null},type=java.lang.reflect.Field}]
[]:<FieldSig: void invoke(java.lang.String)>/name -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<FieldSig: void invoke(java.lang.String)>/num -> []
[]:<FieldSig: void invoke(java.lang.String)>/temp$0 -> [[]:NewObj{<FieldSig: void invoke(java.lang.String)>[0@L9] new A}]
[]:<FieldSig: void invoke(java.lang.String)>/temp$1 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
[]:<FieldSig: void invoke(java.lang.String)>/temp$2 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
[]:<FieldSig: void invoke(java.lang.String)>/temp$3 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
[]:<FieldSig: void invoke(java.lang.String)>/temp$4 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=null},type=java.lang.reflect.Field}]
[]:<FieldSig: void invoke(java.lang.String)>/temp$5 -> []
[]:<FieldSig: void invoke(java.lang.String)>/temp$6 -> []
[]:<FieldSig: void invoke(java.lang.String)>/temp$7 -> [[]:FieldMetaObj{alloc=FieldMetaObj{baseClass=A, signature=null},type=java.lang.reflect.Field}]
[]:<FieldSig: void invoke(java.lang.String)>/temp$8 -> [[]:NewObj{<FieldSig: void invoke(java.lang.String)>[22@L16] new Y}]
[]:<FieldSig: void main(java.lang.String[])>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "field1"}]
[]:<FieldSig: void main(java.lang.String[])>/args -> [[]:EntryPointObj{alloc=<main-arguments>,type=java.lang.String[] in <FieldSig: void main(java.lang.String[])>}]
[]:<FieldSig: void main(java.lang.String[])>/temp$0 -> [[]:MergedObj{<Merged java.lang.String>}]
[]:<X: void <init>()>/%this -> [[]:NewObj{<A: void <init>()>[1@L24] new Y}, []:NewObj{<FieldSig: void invoke(java.lang.String)>[22@L16] new Y}]
[]:<Y: void <init>()>/%this -> [[]:NewObj{<A: void <init>()>[1@L24] new Y}, []:NewObj{<FieldSig: void invoke(java.lang.String)>[22@L16] new Y}]
[]:<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>/$r1 -> []
[]:<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>/%this -> [[]:EntryPointObj{alloc=<main-thread>,type=java.lang.Thread}]
[]:<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>/r2 -> [[]:EntryPointObj{alloc=<main-thread-group>,type=java.lang.ThreadGroup}]
[]:<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>/r3 -> [[]:ConstantObj{java.lang.String: "main"}]
[]:<java.lang.ThreadGroup: void <init>()>/%stringconst1 -> []
[]:<java.lang.ThreadGroup: void <init>()>/%this -> [[]:EntryPointObj{alloc=<system-thread-group>,type=java.lang.ThreadGroup}]
[]:<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>/%this -> [[]:EntryPointObj{alloc=<main-thread-group>,type=java.lang.ThreadGroup}]
[]:<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>/r1 -> [[]:EntryPointObj{alloc=<system-thread-group>,type=java.lang.ThreadGroup}]
[]:<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>/r3 -> [[]:ConstantObj{java.lang.String: "main"}]

Points-to sets of all static fields
<FieldSig: java.lang.Class class$A> -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=A},type=java.lang.Class}]
<java.lang.System: java.io.PrintStream out> -> []

Points-to sets of all instance fields
[]:EntryPointObj{alloc=<main-thread>,type=java.lang.Thread}.blockerLock -> []
[]:EntryPointObj{alloc=<system-thread-group>,type=java.lang.ThreadGroup}.name -> []
[]:NewObj{<FieldSig: void invoke(java.lang.String)>[0@L9] new A}.field1 -> [[]:NewObj{<A: void <init>()>[1@L24] new Y}]

Points-to sets of all array indexes
[]:EntryPointObj{alloc=<main-arguments>,type=java.lang.String[] in <FieldSig: void main(java.lang.String[])>}[*] -> [[]:EntryPointObj{alloc=<main-arguments-element>,type=java.lang.String in <FieldSig: void main(java.lang.String[])>}]

