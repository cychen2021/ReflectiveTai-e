Points-to sets of all variables
[]:<C: void <init>()>/%this -> [[]:NewObj{<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>[13@L15] new C}]
[]:<C: void print(java.lang.Object)>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "C.print(Object)"}]
[]:<C: void print(java.lang.Object)>/%this -> [[]:NewObj{<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>[13@L15] new C}]
[]:<C: void print(java.lang.Object)>/o -> [[]:ConstantObj{java.lang.String: "hello"}]
[]:<C: void print(java.lang.Object)>/temp$0 -> []
[]:<C: void print(java.lang.Object,java.lang.Object)>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "C.print(Object,Object)"}]
[]:<C: void print(java.lang.Object,java.lang.Object)>/%this -> [[]:NewObj{<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>[13@L15] new C}]
[]:<C: void print(java.lang.Object,java.lang.Object)>/o1 -> [[]:ConstantObj{java.lang.String: "hello"}]
[]:<C: void print(java.lang.Object,java.lang.Object)>/o2 -> [[]:ConstantObj{java.lang.String: "hello"}]
[]:<C: void print(java.lang.Object,java.lang.Object)>/temp$0 -> []
[]:<DuplicateName: java.lang.Class class$(java.lang.String)>/name -> [[]:ConstantObj{java.lang.String: "C"}, []:ConstantObj{java.lang.String: "java.lang.Object"}]
[]:<DuplicateName: java.lang.Class class$(java.lang.String)>/temp$0 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: java.lang.Class class$(java.lang.String)>/temp$1 -> [[]:MergedObj{<Merged java.lang.NoClassDefFoundError>}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/%solar-transformation-fresh-arg-0 -> [[]:ConstantObj{java.lang.String: "hello"}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/%solar-transformation-fresh-arg-1 -> [[]:ConstantObj{java.lang.String: "hello"}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/%solar-transformation-fresh-arg-2 -> [[]:ConstantObj{java.lang.String: "hello"}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/%solar-transformation-fresh-arg-3 -> [[]:ConstantObj{java.lang.String: "hello"}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/%solar-transformation-fresh-arg-4 -> [[]:ConstantObj{java.lang.String: "hello"}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/%solar-transformation-fresh-arg-5 -> [[]:ConstantObj{java.lang.String: "hello"}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "C"}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/%stringconst1 -> [[]:ConstantObj{java.lang.String: "print"}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/args -> [[]:NewObj{<DuplicateName: void main(java.lang.String[])>[14@L6] newarray java.lang.Object[%intconst0]}, []:NewObj{<DuplicateName: void main(java.lang.String[])>[40@L7] newarray java.lang.Object[%intconst4]}, []:NewObj{<DuplicateName: void main(java.lang.String[])>[76@L9] newarray java.lang.Object[%intconst5]}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/c -> [[]:NewObj{<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>[13@L15] new C}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/paramTypes -> [[]:NewObj{<DuplicateName: void main(java.lang.String[])>[19@L7] newarray java.lang.Class[%intconst4]}, []:NewObj{<DuplicateName: void main(java.lang.String[])>[1@L6] newarray java.lang.Class[%intconst0]}, []:NewObj{<DuplicateName: void main(java.lang.String[])>[45@L9] newarray java.lang.Class[%intconst5]}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/print -> [[]:MethodMetaObj{alloc=MethodMetaObj{baseClass=C, signature=SignatureRecord[methodName=print, paramTypes=null, returnType=null]},type=java.lang.reflect.Method}, []:MethodMetaObj{alloc=MethodMetaObj{baseClass=java.lang.Object, signature=SignatureRecord[methodName=print, paramTypes=null, returnType=null]},type=java.lang.reflect.Method}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/temp$0 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/temp$1 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/temp$2 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/temp$3 -> [[]:MethodMetaObj{alloc=MethodMetaObj{baseClass=C, signature=SignatureRecord[methodName=print, paramTypes=null, returnType=null]},type=java.lang.reflect.Method}, []:MethodMetaObj{alloc=MethodMetaObj{baseClass=java.lang.Object, signature=SignatureRecord[methodName=print, paramTypes=null, returnType=null]},type=java.lang.reflect.Method}]
[]:<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>/temp$4 -> [[]:NewObj{<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>[13@L15] new C}]
[]:<DuplicateName: void main(java.lang.String[])>/%stringconst1 -> [[]:ConstantObj{java.lang.String: "java.lang.Object"}]
[]:<DuplicateName: void main(java.lang.String[])>/%stringconst3 -> [[]:ConstantObj{java.lang.String: "hello"}]
[]:<DuplicateName: void main(java.lang.String[])>/args -> [[]:EntryPointObj{alloc=<main-arguments>,type=java.lang.String[] in <DuplicateName: void main(java.lang.String[])>}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$0 -> [[]:NewObj{<DuplicateName: void main(java.lang.String[])>[1@L6] newarray java.lang.Class[%intconst0]}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$1 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$10 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$11 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$12 -> [[]:NewObj{<DuplicateName: void main(java.lang.String[])>[40@L7] newarray java.lang.Object[%intconst4]}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$13 -> [[]:NewObj{<DuplicateName: void main(java.lang.String[])>[45@L9] newarray java.lang.Class[%intconst5]}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$14 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$15 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$16 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$17 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$18 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$19 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$2 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$20 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$21 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$22 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$23 -> [[]:NewObj{<DuplicateName: void main(java.lang.String[])>[76@L9] newarray java.lang.Object[%intconst5]}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$3 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$4 -> [[]:NewObj{<DuplicateName: void main(java.lang.String[])>[14@L6] newarray java.lang.Object[%intconst0]}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$5 -> [[]:NewObj{<DuplicateName: void main(java.lang.String[])>[19@L7] newarray java.lang.Class[%intconst4]}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$6 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$7 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$8 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<DuplicateName: void main(java.lang.String[])>/temp$9 -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:<Parent: void <init>()>/%this -> [[]:NewObj{<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>[13@L15] new C}]
[]:<Parent: void print(java.lang.Object,java.lang.Object,java.lang.Object)>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "Parent.print(Object,Object,Object)"}]
[]:<Parent: void print(java.lang.Object,java.lang.Object,java.lang.Object)>/%this -> [[]:NewObj{<DuplicateName: void invokePrint(java.lang.Class[],java.lang.Object[])>[13@L15] new C}]
[]:<Parent: void print(java.lang.Object,java.lang.Object,java.lang.Object)>/o1 -> [[]:ConstantObj{java.lang.String: "hello"}]
[]:<Parent: void print(java.lang.Object,java.lang.Object,java.lang.Object)>/o2 -> [[]:ConstantObj{java.lang.String: "hello"}]
[]:<Parent: void print(java.lang.Object,java.lang.Object,java.lang.Object)>/o3 -> [[]:ConstantObj{java.lang.String: "hello"}]
[]:<Parent: void print(java.lang.Object,java.lang.Object,java.lang.Object)>/temp$0 -> []

Points-to sets of all static fields
<DuplicateName: java.lang.Class class$C> -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
<DuplicateName: java.lang.Class class$java$lang$Object> -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
<java.lang.System: java.io.PrintStream out> -> []

Points-to sets of all instance fields

Points-to sets of all array indexes
[]:EntryPointObj{alloc=<main-arguments>,type=java.lang.String[] in <DuplicateName: void main(java.lang.String[])>}[*] -> [[]:EntryPointObj{alloc=<main-arguments-element>,type=java.lang.String in <DuplicateName: void main(java.lang.String[])>}]
[]:NewObj{<DuplicateName: void main(java.lang.String[])>[14@L6] newarray java.lang.Object[%intconst0]}[*] -> [[]:ConstantObj{java.lang.String: "hello"}]
[]:NewObj{<DuplicateName: void main(java.lang.String[])>[19@L7] newarray java.lang.Class[%intconst4]}[*] -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:NewObj{<DuplicateName: void main(java.lang.String[])>[1@L6] newarray java.lang.Class[%intconst0]}[*] -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:NewObj{<DuplicateName: void main(java.lang.String[])>[40@L7] newarray java.lang.Object[%intconst4]}[*] -> [[]:ConstantObj{java.lang.String: "hello"}]
[]:NewObj{<DuplicateName: void main(java.lang.String[])>[45@L9] newarray java.lang.Class[%intconst5]}[*] -> [[]:ClassMetaObj{alloc=ClassMetaObj{knownClass=C},type=java.lang.Class}, []:ClassMetaObj{alloc=ClassMetaObj{knownClass=java.lang.Object},type=java.lang.Class}]
[]:NewObj{<DuplicateName: void main(java.lang.String[])>[76@L9] newarray java.lang.Object[%intconst5]}[*] -> [[]:ConstantObj{java.lang.String: "hello"}]

